include:
  - project: complex/cicd
    file:
      - buildx.yml
      - deploy-k8s.yml



variables:
  extends: .build-variables

build:
  extends: .build-dockerfile
  variables:
    DOCKERFILE: Dockerfile
    CONTEXT: ./
    IMAGE: ''
# push to orwin:
#   extends: .build-pwd
#   needs: ["build"]
#   variables:
#     DEST_REG: orwin.myds.me:8443/docker
#   before_script:
#     - echo $REGISTRY_PASSWORD  | docker login -u $REGISTRY_USER --password-stdin $REGISTRY_INSECURE
#     - echo $ORWIN_REGISTRY_PASSWORD  | docker login -u docker --password-stdin $DEST_REG
#   script:
#     - export CI_REGISTRY_IMAGE=$REGISTRY_INSECURE/$CI_PROJECT_PATH
#     - export DEST_IMAGE=$DEST_REG/$CI_PROJECT_PATH
    
#     - docker pull $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
#     - docker tag  $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME $DEST_IMAGE:$CI_BUILD_REF_NAME
#     - docker push $DEST_IMAGE:$CI_BUILD_REF_NAME
deploy:
  extends: .kubectl
  needs: ["build"]
  variables: &vars
    KUBECONFIG: $KUBECONFIG_DH
    FILE: manifests/deployment.yaml
    NAMESPACE: psd-sma-dh
    
# deploy:
#   # extends: .kubectl
#   image: debian
#   # needs: []
#   needs: ["build"]
#   variables:
#     HOST: 10.7.27.171
#     PROJECT: vr-ml
#   before_script:
#   - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#   - mkdir -p ~/.ssh
#   - cp "$SSH_PRIVATE_KEY" ~/.ssh/id_rsa
#   - chmod 400 ~/.ssh/id_rsa
#   - chmod 700 ~/.ssh
#   script:
#   - >
#     ssh -o StrictHostKeyChecking=no "docker@$HOST" -- "cd $PROJECT; docker compose up -d --pull=always --remove-orphans"
